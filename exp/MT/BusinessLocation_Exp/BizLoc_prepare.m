% Example illustrating the business outlet location problem involving
% probability measures with continuous piece-wise affine density

CONFIG = BizLoc_config();

marg_num = 5;

marg_vertices_cell = cell(marg_num, 1);
marg_triangles_cell = cell(marg_num, 1);
marg_density_cell = cell(marg_num, 1);

marg_vertices_cell{1} = ...
    [-2, -2; ...
     -1, -2; ...
     -2, -1; ...
     -1, -1; ...
      1, -2; ...
      2, -2; ...
      1, -1; ...
      2, -1; ...
     -2,  1; ...
     -1,  1; ...
     -2,  2; ...
     -1,  2; ...
      1,  1; ...
      2,  1; ...
      1,  2; ...
      2,  2];
marg_triangles_cell{1} = ...
    [ 1,  2,  3; ...
      2,  3,  4; ...
      5,  6,  7; ...
      6,  7,  8; ...
      9, 10, 11; ...
     10, 11, 12; ...
     13, 14, 15; ...
     14, 15, 16; ...
      3,  4,  9; ...
      4,  9, 10; ...
      7,  8, 13; ...
      8, 13, 14; ...
      2,  5,  4; ...
      5,  4,  7; ...
     10, 13, 12; ...
     13, 12, 15];
marg_density_cell{1} = ...
    [1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1; ...
     1];

marg_vertices_cell{2} = ...
    [-2, -2; ...
     -1, -2; ...
     -2, -1; ...
     -1, -1; ...
     -2,  0; ...
     -1,  0; ...
     -2,  1; ...
     -1,  1; ...
     -2,  2; ...
     -1,  2; ...
      1, -2; ...
      2, -2; ...
      1, -1; ...
      2, -1; ...
      1,  0; ...
      2,  0; ...
      1,  1; ...
      2,  1; ...
      1,  2; ...
      2,  2];
marg_triangles_cell{2} = ...
    [ 1,  2,  3; ...
      2,  3,  4; ...
      3,  4,  5; ...
      4,  5,  6; ...
      5,  6,  7; ...
      6,  7,  8; ...
      7,  8,  9; ...
      8,  9, 10; ...
     11, 12, 13; ...
     12, 13, 14; ...
     13, 14, 15; ...
     14, 15, 16; ...
     15, 16, 17; ...
     16, 17, 18; ...
     17, 18, 19; ...
     18, 19, 20; ...
      2, 11,  4; ...
     11,  4, 13; ...
      8, 17, 10; ...
     17, 10, 19];
marg_density_cell{2} = ...
    [1; ...
     1; ...
     2; ...
     2; ...
     3; ...
     3; ...
     4; ...
     4; ...
     5; ...
     5; ...
     1; ...
     1; ...
     2; ...
     2; ...
     3; ...
     3; ...
     4; ...
     4; ...
     5; ...
     5];

marg_vertices_cell{3} = ...
    [-2, -2; ...
     -2, -1; ...
     -1, -2; ...
     -1, -1; ...
      0, -2; ...
      0, -1; ...
      1, -2; ...
      1, -1; ...
      2, -2; ...
      2, -1; ...
     -2,  1; ...
     -2,  2; ...
     -1,  1; ...
     -1,  2; ...
      0,  1; ...
      0,  2; ...
      1,  1; ...
      1,  2; ...
      2,  1; ...
      2,  2];
marg_triangles_cell{3} = ...
    [ 1,  2,  3; ...
      2,  3,  4; ...
      3,  4,  5; ...
      4,  5,  6; ...
      5,  6,  7; ...
      6,  7,  8; ...
      7,  8,  9; ...
      8,  9, 10; ...
     11, 12, 13; ...
     12, 13, 14; ...
     13, 14, 15; ...
     14, 15, 16; ...
     15, 16, 17; ...
     16, 17, 18; ...
     17, 18, 19; ...
     18, 19, 20; ...
      2, 11,  4; ...
     11,  4, 13; ...
      8, 17, 10; ...
     17, 10, 19];
marg_density_cell{3} = ...
    [1; ...
     1; ...
     2; ...
     2; ...
     3; ...
     3; ...
     4; ...
     4; ...
     5; ...
     5; ...
     1; ...
     1; ...
     2; ...
     2; ...
     3; ...
     3; ...
     4; ...
     4; ...
     5; ...
     5];

marg_vertices_cell{4} = ...
    [-2, -2; ...
     -1, -2; ...
     -2, -1; ...
      0, -2; ...
     -1, -1; ...
     -2,  0; ...
      1, -2; ...
      0, -1; ...
     -1,  0; ...
     -2,  1; ...
      2, -2; ...
      1, -1; ...
     -1,  1; ...
     -2,  2; ...
      2, -1; ...
      1,  0; ...
      0,  1; ...
     -1,  2; ...
      2,  0; ...
      1,  1; ...
      0,  2; ...
      2,  1; ...
      1,  2; ...
      2,  2];
marg_triangles_cell{4} = ...
    [ 1,  2,  3; ...
      2,  4,  5; ...
      2,  3,  5; ...
      3,  5,  6; ...
      4,  7,  8; ...
      4,  5,  8; ...
      5,  6,  9; ...
      6,  9, 10; ...
      7, 11, 12; ...
      7,  8, 12; ...
      9, 10, 13; ...
     10, 13, 14; ...
     11, 12, 15; ...
     12, 15, 16; ...
     13, 17, 18; ...
     13, 14, 18; ...
     15, 16, 19; ...
     16, 19, 20; ...
     17, 20, 21; ...
     17, 18, 21; ...
     19, 20, 22; ...
     20, 22, 23; ...
     20, 21, 23; ...
     22, 23, 24];
marg_density_cell{4} = ...
    [5.0; ...
     4.5; ...
     4.5; ...
     4.0; ...
     4.0; ...
     4.0; ...
     3.5; ...
     3.5; ...
     3.5; ...
     3.5; ...
     3.0; ...
     3.0; ...
     3.0; ...
     3.0; ...
     2.5; ...
     2.5; ...
     2.5; ...
     2.5; ...
     2.0; ...
     2.0; ...
     2.0; ...
     1.5; ...
     1.5; ...
     1.0];

marg_vertices_cell{5} = ...
    [-2, -3; ...
     -2, -2; ...
     -1, -3; ...
     -1, -2; ...
      0, -3; ...
      0, -2; ...
      1, -3; ...
      1, -2; ...
      2, -3; ...
      2, -2];
marg_triangles_cell{5} = ...
    [ 1,  2,  3; ...
      2,  3,  4; ...
      3,  4,  5; ...
      4,  5,  6; ...
      5,  6,  7; ...
      6,  7,  8; ...
      7,  8,  9; ...
      8,  9, 10];
marg_density_cell{5} = ...
    [1; ...
     2; ...
     2; ...
     1; ...
     1; ...
     2; ...
     2; ...
     1; ...
     1; ...
     2];

quality_vertices = [-2, -2; 2, -2; 2, 2; -2, 2];

costfuncs = struct;
costfuncs.weights = [0.15; 0.15; 0.15; 0.15; 0.40];
costfuncs.availabilities = [true; true; true; true; false];
costfuncs.stations = ...
    [-1.5, -1.5; ...
      0.0, -1.5; ...
      0.0,  0.0; ...
      0.0,  1.5; ...
      1.5,  1.5];
costfuncs.inter_station_costs = ...
    [0.0, 0.1, 0.2, 0.3, 0.4; ...
     0.1, 0.0, 0.1, 0.2, 0.3; ...
     0.2, 0.1, 0.0, 0.1, 0.2; ...
     0.3, 0.2, 0.1, 0.0, 0.1; ...
     0.4, 0.3, 0.2, 0.1, 0.0];

test_num = 5;
mesh_sizes = [1; 1/2; 1/4; 1/8; 1/16];

marg_testfuncs_cell = cell(test_num, 1);
quality_testfuncs_cell = cell(test_num, 1);

for test_id = 1:test_num
    x_list = (0:mesh_sizes(test_id):1)';
    y1_list = (0:mesh_sizes(test_id):1)';
    [Gx, Gy] = meshgrid(x_list, y1_list);
    grid1 = [Gx(:), Gy(:)];
    inside1 = sum(grid1, 2) < 1 + 1e-5;
    grid1 = grid1(inside1, :);
    tri1 = delaunay(grid1);
    tri1 = cleanup_triangles(grid1, tri1, [], false);

    y2_list = (0:mesh_sizes(test_id):2)';
    [Gx, Gy] = meshgrid(x_list, y2_list);
    grid2 = [Gx(:), Gy(:)];
    inside2 = (grid2(:, 1) * 2 + grid2(:, 2)) < 2 * (1 + 1e-5);
    grid2 = grid2(inside2, :);
    ondiag2 = [1 - y2_list / 2, y2_list];
    grid2 = [grid2; ondiag2]; %#ok<AGROW>
    [~, uind] = unique(round(grid2, 7), 'rows', 'stable');
    grid2 = grid2(uind, :);
    tri2 = delaunay(grid2);
    tri2 = cleanup_triangles(grid2, tri2, [], false);

    marg_tf_vert_cell = cell(marg_num, 1);
    marg_tf_tri_cell = cell(marg_num, 1);

    % marginal 1
    marg_tf_vert_cell{1} = cell(16, 1);
    marg_tf_tri_cell{1} = cell(16, 1);

    marg_tf_vert_cell{1}{1} = grid1 + [-2, -2];
    marg_tf_tri_cell{1}{1} = tri1;
    
    marg_tf_vert_cell{1}{2} = -grid1 + [-1, -1];
    marg_tf_tri_cell{1}{2} = tri1;

    marg_tf_vert_cell{1}{3} = grid1 + [1, -2];
    marg_tf_tri_cell{1}{3} = tri1;
    
    marg_tf_vert_cell{1}{4} = -grid1 + [2, -1];
    marg_tf_tri_cell{1}{4} = tri1;

    marg_tf_vert_cell{1}{5} = grid1 + [-2, 1];
    marg_tf_tri_cell{1}{5} = tri1;
    
    marg_tf_vert_cell{1}{6} = -grid1 + [-1, 2];
    marg_tf_tri_cell{1}{6} = tri1;

    marg_tf_vert_cell{1}{7} = grid1 + [1, 1];
    marg_tf_tri_cell{1}{7} = tri1;
    
    marg_tf_vert_cell{1}{8} = -grid1 + [2, 2];
    marg_tf_tri_cell{1}{8} = tri1;

    marg_tf_vert_cell{1}{9} = grid2 + [-2, -1];
    marg_tf_tri_cell{1}{9} = tri2;

    marg_tf_vert_cell{1}{10} = -grid2 + [-1, 1];
    marg_tf_tri_cell{1}{10} = tri2;

    marg_tf_vert_cell{1}{11} = grid2 + [1, -1];
    marg_tf_tri_cell{1}{11} = tri2;

    marg_tf_vert_cell{1}{12} = -grid2 + [2, 1];
    marg_tf_tri_cell{1}{12} = tri2;

    marg_tf_vert_cell{1}{13} = grid2 * [0, 1; 1, 0] + [-1, -2];
    marg_tf_tri_cell{1}{13} = tri2;

    marg_tf_vert_cell{1}{14} = grid2 * [0, -1; -1, 0] + [1, -1];
    marg_tf_tri_cell{1}{14} = tri2;

    marg_tf_vert_cell{1}{15} = grid2 * [0, 1; 1, 0] + [-1, 1];
    marg_tf_tri_cell{1}{15} = tri2;

    marg_tf_vert_cell{1}{16} = grid2 * [0, -1; -1, 0] + [1, 2];
    marg_tf_tri_cell{1}{16} = tri2;


    % marginal 2
    marg_tf_vert_cell{2} = cell(20, 1);
    marg_tf_tri_cell{2} = cell(20, 1);
    
    marg_tf_vert_cell{2}{1} = grid1 + [-2, -2];
    marg_tf_tri_cell{2}{1} = tri1;

    marg_tf_vert_cell{2}{2} = -grid1 + [-1, -1];
    marg_tf_tri_cell{2}{2} = tri1;

    marg_tf_vert_cell{2}{3} = grid1 + [-2, -1];
    marg_tf_tri_cell{2}{3} = tri1;

    marg_tf_vert_cell{2}{4} = -grid1 + [-1, 0];
    marg_tf_tri_cell{2}{4} = tri1;

    marg_tf_vert_cell{2}{5} = grid1 + [-2, 0];
    marg_tf_tri_cell{2}{5} = tri1;

    marg_tf_vert_cell{2}{6} = -grid1 + [-1, 1];
    marg_tf_tri_cell{2}{6} = tri1;

    marg_tf_vert_cell{2}{7} = grid1 + [-2, 1];
    marg_tf_tri_cell{2}{7} = tri1;

    marg_tf_vert_cell{2}{8} = -grid1 + [-1, 2];
    marg_tf_tri_cell{2}{8} = tri1;

    marg_tf_vert_cell{2}{9} = grid1 + [1, -2];
    marg_tf_tri_cell{2}{9} = tri1;

    marg_tf_vert_cell{2}{10} = -grid1 + [2, -1];
    marg_tf_tri_cell{2}{10} = tri1;

    marg_tf_vert_cell{2}{11} = grid1 + [1, -1];
    marg_tf_tri_cell{2}{11} = tri1;

    marg_tf_vert_cell{2}{12} = -grid1 + [2, 0];
    marg_tf_tri_cell{2}{12} = tri1;

    marg_tf_vert_cell{2}{13} = grid1 + [1, 0];
    marg_tf_tri_cell{2}{13} = tri1;

    marg_tf_vert_cell{2}{14} = -grid1 + [2, 1];
    marg_tf_tri_cell{2}{14} = tri1;

    marg_tf_vert_cell{2}{15} = grid1 + [1, 1];
    marg_tf_tri_cell{2}{15} = tri1;

    marg_tf_vert_cell{2}{16} = -grid1 + [2, 2];
    marg_tf_tri_cell{2}{16} = tri1;

    marg_tf_vert_cell{2}{17} = grid2 * [0, 1; 1, 0] + [-1, -2];
    marg_tf_tri_cell{2}{17} = tri2;

    marg_tf_vert_cell{2}{18} = grid2 * [0, -1; -1, 0] + [1, -1];
    marg_tf_tri_cell{2}{18} = tri2;

    marg_tf_vert_cell{2}{19} = grid2 * [0, 1; 1, 0] + [-1, 1];
    marg_tf_tri_cell{2}{19} = tri2;

    marg_tf_vert_cell{2}{20} = grid2 * [0, -1; -1, 0] + [1, 2];
    marg_tf_tri_cell{2}{20} = tri2;


    % marginal 3
    marg_tf_vert_cell{3} = cell(20, 1);
    marg_tf_tri_cell{3} = cell(20, 1);
    
    marg_tf_vert_cell{3}{1} = grid1 + [-2, -2];
    marg_tf_tri_cell{3}{1} = tri1;

    marg_tf_vert_cell{3}{2} = -grid1 + [-1, -1];
    marg_tf_tri_cell{3}{2} = tri1;

    marg_tf_vert_cell{3}{3} = grid1 + [-1, -2];
    marg_tf_tri_cell{3}{3} = tri1;

    marg_tf_vert_cell{3}{4} = -grid1 + [0, -1];
    marg_tf_tri_cell{3}{4} = tri1;

    marg_tf_vert_cell{3}{5} = grid1 + [0, -2];
    marg_tf_tri_cell{3}{5} = tri1;

    marg_tf_vert_cell{3}{6} = -grid1 + [1, -1];
    marg_tf_tri_cell{3}{6} = tri1;

    marg_tf_vert_cell{3}{7} = grid1 + [1, -2];
    marg_tf_tri_cell{3}{7} = tri1;

    marg_tf_vert_cell{3}{8} = -grid1 + [2, -1];
    marg_tf_tri_cell{3}{8} = tri1;

    marg_tf_vert_cell{3}{9} = grid1 + [-2, 1];
    marg_tf_tri_cell{3}{9} = tri1;

    marg_tf_vert_cell{3}{10} = -grid1 + [-1, 2];
    marg_tf_tri_cell{3}{10} = tri1;

    marg_tf_vert_cell{3}{11} = grid1 + [-1, 1];
    marg_tf_tri_cell{3}{11} = tri1;

    marg_tf_vert_cell{3}{12} = -grid1 + [0, 2];
    marg_tf_tri_cell{3}{12} = tri1;

    marg_tf_vert_cell{3}{13} = grid1 + [0, 1];
    marg_tf_tri_cell{3}{13} = tri1;

    marg_tf_vert_cell{3}{14} = -grid1 + [1, 2];
    marg_tf_tri_cell{3}{14} = tri1;

    marg_tf_vert_cell{3}{15} = grid1 + [1, 1];
    marg_tf_tri_cell{3}{15} = tri1;

    marg_tf_vert_cell{3}{16} = -grid1 + [2, 2];
    marg_tf_tri_cell{3}{16} = tri1;

    marg_tf_vert_cell{3}{17} = grid2 + [-2, -1];
    marg_tf_tri_cell{3}{17} = tri2;

    marg_tf_vert_cell{3}{18} = -grid2 + [-1, 1];
    marg_tf_tri_cell{3}{18} = tri2;

    marg_tf_vert_cell{3}{19} = grid2 + [1, -1];
    marg_tf_tri_cell{3}{19} = tri2;

    marg_tf_vert_cell{3}{20} = -grid2 + [2, 1];
    marg_tf_tri_cell{3}{20} = tri2;


    % marginal 4
    marg_tf_vert_cell{4} = cell(24, 1);
    marg_tf_tri_cell{4} = cell(24, 1);

    marg_tf_vert_cell{4}{1} = grid1 + [-2, -2];
    marg_tf_tri_cell{4}{1} = tri1;

    marg_tf_vert_cell{4}{2} = grid1 + [-1, -2];
    marg_tf_tri_cell{4}{2} = tri1;

    marg_tf_vert_cell{4}{3} = -grid1 + [-1, -1];
    marg_tf_tri_cell{4}{3} = tri1;

    marg_tf_vert_cell{4}{4} = grid1 + [-2, -1];
    marg_tf_tri_cell{4}{4} = tri1;

    marg_tf_vert_cell{4}{5} = grid1 + [0, -2];
    marg_tf_tri_cell{4}{5} = tri1;

    marg_tf_vert_cell{4}{6} = -grid1 + [0, -1];
    marg_tf_tri_cell{4}{6} = tri1;

    marg_tf_vert_cell{4}{7} = -grid1 + [-1, 0];
    marg_tf_tri_cell{4}{7} = tri1;

    marg_tf_vert_cell{4}{8} = grid1 + [-2, 0];
    marg_tf_tri_cell{4}{8} = tri1;

    marg_tf_vert_cell{4}{9} = grid1 + [1, -2];
    marg_tf_tri_cell{4}{9} = tri1;

    marg_tf_vert_cell{4}{10} = -grid1 + [1, -1];
    marg_tf_tri_cell{4}{10} = tri1;

    marg_tf_vert_cell{4}{11} = -grid1 + [-1, 1];
    marg_tf_tri_cell{4}{11} = tri1;

    marg_tf_vert_cell{4}{12} = grid1 + [-2, 1];
    marg_tf_tri_cell{4}{12} = tri1;

    marg_tf_vert_cell{4}{13} = -grid1 + [2, -1];
    marg_tf_tri_cell{4}{13} = tri1;

    marg_tf_vert_cell{4}{14} = grid1 + [1, -1];
    marg_tf_tri_cell{4}{14} = tri1;

    marg_tf_vert_cell{4}{15} = grid1 + [-1, 1];
    marg_tf_tri_cell{4}{15} = tri1;

    marg_tf_vert_cell{4}{16} = -grid1 + [-1, 2];
    marg_tf_tri_cell{4}{16} = tri1;

    marg_tf_vert_cell{4}{17} = -grid1 + [2, 0];
    marg_tf_tri_cell{4}{17} = tri1;

    marg_tf_vert_cell{4}{18} = grid1 + [1, 0];
    marg_tf_tri_cell{4}{18} = tri1;

    marg_tf_vert_cell{4}{19} = grid1 + [0, 1];
    marg_tf_tri_cell{4}{19} = tri1;

    marg_tf_vert_cell{4}{20} = -grid1 + [0, 2];
    marg_tf_tri_cell{4}{20} = tri1;

    marg_tf_vert_cell{4}{21} = -grid1 + [2, 1];
    marg_tf_tri_cell{4}{21} = tri1;

    marg_tf_vert_cell{4}{22} = grid1 + [1, 1];
    marg_tf_tri_cell{4}{22} = tri1;

    marg_tf_vert_cell{4}{23} = -grid1 + [1, 2];
    marg_tf_tri_cell{4}{23} = tri1;

    marg_tf_vert_cell{4}{24} = -grid1 + [2, 2];
    marg_tf_tri_cell{4}{24} = tri1;


    % marginal 5
    marg_tf_vert_cell{5} = cell(8, 1);
    marg_tf_tri_cell{5} = cell(8, 1);

    marg_tf_vert_cell{5}{1} = grid1 + [-2, -3];
    marg_tf_tri_cell{5}{1} = tri1;

    marg_tf_vert_cell{5}{2} = -grid1 + [-1, -2];
    marg_tf_tri_cell{5}{2} = tri1;

    marg_tf_vert_cell{5}{3} = grid1 + [-1, -3];
    marg_tf_tri_cell{5}{3} = tri1;

    marg_tf_vert_cell{5}{4} = -grid1 + [0, -2];
    marg_tf_tri_cell{5}{4} = tri1;

    marg_tf_vert_cell{5}{5} = grid1 + [0, -3];
    marg_tf_tri_cell{5}{5} = tri1;

    marg_tf_vert_cell{5}{6} = -grid1 + [1, -2];
    marg_tf_tri_cell{5}{6} = tri1;

    marg_tf_vert_cell{5}{7} = grid1 + [1, -3];
    marg_tf_tri_cell{5}{7} = tri1;

    marg_tf_vert_cell{5}{8} = -grid1 + [2, -2];
    marg_tf_tri_cell{5}{8} = tri1;

    marg_tf = cell(marg_num, 1);

    for marg_id = 1:marg_num
        marg_tf_vert_agg = [marg_vertices_cell{marg_id}; ...
            vertcat(marg_tf_vert_cell{marg_id}{:})];
        [marg_tf_vert_unique, ~, umap] = unique( ...
            round(marg_tf_vert_agg, 7), 'rows', 'stable');

        tri_num = size(marg_triangles_cell{marg_id}, 1);
        marg_tf_tri = cell(tri_num, 1);
        counter = size(marg_vertices_cell{marg_id}, 1);

        for tri_id = 1:tri_num
            vert_num = size(marg_tf_vert_cell{marg_id}{tri_id}, 1);
            umap_tri = umap(counter + (1:vert_num), :);

            marg_tf_tri{tri_id} = ...
                umap_tri(marg_tf_tri_cell{marg_id}{tri_id});

            if size(marg_tf_tri{tri_id}, 2) == 1
                marg_tf_tri{tri_id} = marg_tf_tri{tri_id}';
            end

            counter = counter + vert_num;
        end

        marg_tf{marg_id} = {marg_tf_vert_unique, marg_tf_tri, false};
    end

    marg_testfuncs_cell{test_id} = marg_tf;

    quality_x_list = -2:mesh_sizes(test_id):2;
    quality_y_list = -2:mesh_sizes(test_id):2;

    [Gx, Gy] = meshgrid(quality_x_list, quality_y_list);

    quality_tf_vert = [quality_vertices; [Gx(:), Gy(:)]];
    [~, uind] = unique(round(quality_tf_vert, 7), 'rows', 'stable');
    quality_tf_vert = quality_tf_vert(uind, :);
    quality_tf_tri = delaunay(quality_tf_vert);
    quality_tf_tri = cleanup_triangles(quality_tf_vert, quality_tf_tri, ...
        [], false);

    quality_testfuncs_cell{test_id} = ...
        {quality_tf_vert, quality_tf_tri, false};
end


plot_x_num = 1001;
plot_y_num = 1501;

marg_plot_grid_cell = cell(marg_num, 1);
marg_plot_grid_x_cell = cell(marg_num, 1);
marg_plot_grid_y_cell = cell(marg_num, 1);

for marg_id = 1:marg_num
    plot_x_pt = linspace(-2, 2, plot_x_num)';
    plot_y_pt = linspace(-3, 2, plot_y_num)';

    [marg_plot_grid_x, marg_plot_grid_y] = meshgrid(plot_x_pt, plot_y_pt);

    marg_plot_grid_cell{marg_id} = ...
        [marg_plot_grid_x(:), marg_plot_grid_y(:)];
    marg_plot_grid_x_cell{marg_id} = marg_plot_grid_x;
    marg_plot_grid_y_cell{marg_id} = marg_plot_grid_y;
end

quality_x_min = min(quality_vertices(:, 1));
quality_x_max = max(quality_vertices(:, 1));
quality_y_min = min(quality_vertices(:, 2));
quality_y_max = max(quality_vertices(:, 2));

% grid used to plot the histogram 
quality_hist_x_num = 300;
quality_hist_y_num = 300;

quality_hist_edge_x = linspace(quality_x_min, quality_x_max, ...
    quality_hist_x_num + 1)';
quality_hist_edge_y = linspace(quality_y_min, quality_y_max, ...
    quality_hist_y_num + 1)';
quality_plot_hist_x = (quality_hist_edge_x(1:end - 1) ...
    + quality_hist_edge_x(2:end)) / 2;
quality_plot_hist_y = (quality_hist_edge_y(1:end - 1) ...
    + quality_hist_edge_y(2:end)) / 2;
[quality_plot_hist_grid_x, quality_plot_hist_grid_y] = ...
    meshgrid(quality_plot_hist_x, quality_plot_hist_y);

% grid used to plot the computed transfer functions
quality_transfuncs_x_num = 300;
quality_transfuncs_y_num = 300;

quality_transfuncs_x = linspace(quality_x_min, quality_x_max, ...
    quality_transfuncs_x_num + 1)';
quality_transfuncs_y = linspace(quality_y_min, quality_y_max, ...
    quality_transfuncs_y_num + 1)';
quality_transfuncs_x = (quality_transfuncs_x(1:end - 1) ...
    + quality_transfuncs_x(2:end)) / 2;
quality_transfuncs_y = (quality_transfuncs_y(1:end - 1) ...
    + quality_transfuncs_y(2:end)) / 2;
[quality_transfuncs_grid_x, quality_transfuncs_grid_y] = ...
    meshgrid(quality_transfuncs_x, quality_transfuncs_y);

quality_transfuncs_grid = [quality_transfuncs_grid_x(:), ...
    quality_transfuncs_grid_y(:)];


save(CONFIG.SAVEPATH_INPUTS, ...
    'test_num', ...
    'marg_num', ...
    'plot_x_num', ...
    'plot_y_num', ...
    'marg_vertices_cell', ...
    'marg_triangles_cell', ...
    'marg_density_cell', ...
    'marg_plot_grid_cell', ...
    'marg_plot_grid_x_cell', ...
    'marg_plot_grid_y_cell', ...
    'marg_testfuncs_cell', ...
    'quality_vertices', ...
    'quality_testfuncs_cell', ...
    'quality_x_min', ...
    'quality_x_max', ...
    'quality_y_min', ...
    'quality_y_max', ...
    'quality_hist_x_num', ...
    'quality_hist_y_num', ...
    'quality_hist_edge_x', ...
    'quality_hist_edge_y', ...
    'quality_plot_hist_grid_x', ...
    'quality_plot_hist_grid_y', ...
    'quality_transfuncs_grid', ...
    'quality_transfuncs_grid_x', ...
    'quality_transfuncs_grid_y', ...
    'costfuncs', ...
    '-v7.3');